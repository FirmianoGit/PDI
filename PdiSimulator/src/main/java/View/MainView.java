/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

/**
 *
 * @author Firmiano
 */
public class MainView extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(MainView.class.getName());

    /**
     * Creates new form MainView
     */
    private BufferedImage imagemAtual; // guarda a imagem que será exibida
    private JPanel painelImagem;

    public MainView() {
        initComponents();
        painelImagem = new JPanel() {
            @Override
            protected void paintComponent(java.awt.Graphics g) {
                super.paintComponent(g);
                if (imagemAtual != null) {
                    g.drawImage(imagemAtual, 0, 0, getWidth(), getHeight(), this);
                }
            }
        };

        painelImagem.setLayout(new java.awt.BorderLayout());

        JScrollPane scroll = new JScrollPane(painelImagem);

        // Remove qualquer componente dentro do JFMainJpanel
        JFMainJpanel.removeAll();

        // Adiciona o scroll com o painel no JFMainJpanel
        JFMainJpanel.setLayout(new java.awt.BorderLayout());
        JFMainJpanel.add(scroll, java.awt.BorderLayout.CENTER);

        // Atualiza o layout para aplicar as mudanças
        JFMainJpanel.revalidate();
        JFMainJpanel.repaint();

        // Substituindo corretamente o painel de histograma pelo painel personalizado
        JFHistograma histogramaPanel = new JFHistograma();
        JFPainelHistograma.removeAll();
        JFPainelHistograma.setLayout(new java.awt.BorderLayout());
        JFPainelHistograma.add(histogramaPanel, java.awt.BorderLayout.CENTER);
        JFPainelHistograma.revalidate();
        JFPainelHistograma.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JFMainJpanel = new javax.swing.JPanel();
        JFPainelHistograma = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        JFCarregarImagemMenuItem = new javax.swing.JMenuItem();
        JFSalvarImagemMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1280, 720));

        JFMainJpanel.setPreferredSize(new java.awt.Dimension(512, 512));

        javax.swing.GroupLayout JFMainJpanelLayout = new javax.swing.GroupLayout(JFMainJpanel);
        JFMainJpanel.setLayout(JFMainJpanelLayout);
        JFMainJpanelLayout.setHorizontalGroup(
            JFMainJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 512, Short.MAX_VALUE)
        );
        JFMainJpanelLayout.setVerticalGroup(
            JFMainJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 512, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout JFPainelHistogramaLayout = new javax.swing.GroupLayout(JFPainelHistograma);
        JFPainelHistograma.setLayout(JFPainelHistogramaLayout);
        JFPainelHistogramaLayout.setHorizontalGroup(
            JFPainelHistogramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 512, Short.MAX_VALUE)
        );
        JFPainelHistogramaLayout.setVerticalGroup(
            JFPainelHistogramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jMenu1.setText("Imagem");

        JFCarregarImagemMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        JFCarregarImagemMenuItem.setText("Carregar imagem");
        JFCarregarImagemMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JFCarregarImagemMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(JFCarregarImagemMenuItem);

        JFSalvarImagemMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        JFSalvarImagemMenuItem.setText("Salvar Imagem");
        JFSalvarImagemMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JFSalvarImagemMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(JFSalvarImagemMenuItem);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Tools");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(JFMainJpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(JFPainelHistograma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 244, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(JFMainJpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(JFPainelHistograma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JFCarregarImagemMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JFCarregarImagemMenuItemActionPerformed
        JFileChooser chooser = new JFileChooser();
        int resultado = chooser.showOpenDialog(this);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            File arquivoSelecionado = chooser.getSelectedFile();
            try {
                BufferedImage img = ImageIO.read(arquivoSelecionado);

                // Atualiza a imagem atual
                this.imagemAtual = img;

                // Redesenha o painel
                painelImagem.repaint();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro ao abrir a imagem!");
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_JFCarregarImagemMenuItemActionPerformed

    private void JFSalvarImagemMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JFSalvarImagemMenuItemActionPerformed
        if (imagemAtual == null) {
            JOptionPane.showMessageDialog(this, "Nenhuma imagem carregada para salvar!");
            return;
        }
        JFileChooser chooser = new JFileChooser();
        int resultado = chooser.showSaveDialog(this);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            File arquivoSalvar = chooser.getSelectedFile();
            String caminho = arquivoSalvar.getAbsolutePath();

            // Para garantir a extensão .bmp ou .png
            if (!caminho.toLowerCase().endsWith(".bmp") && !caminho.toLowerCase().endsWith(".png") && !caminho.toLowerCase().endsWith(".jpg")) {
                caminho += ".bmp";
                arquivoSalvar = new File(caminho);
            }

            try {
                ImageIO.write(imagemAtual, "bmp", arquivoSalvar); // Salva como BMP
                JOptionPane.showMessageDialog(this, "Imagem salva com sucesso!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro ao salvar imagem!");
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_JFSalvarImagemMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new MainView().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem JFCarregarImagemMenuItem;
    private javax.swing.JPanel JFMainJpanel;
    private javax.swing.JPanel JFPainelHistograma;
    private javax.swing.JMenuItem JFSalvarImagemMenuItem;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables
}
